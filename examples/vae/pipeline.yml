# pre_script: examples/vae/pre.py
# post_script: examples/vae/post.py

# Stages to run
stages:
    # Simulate a spectroscopic catalog
    - name: FlowEngine
      threads_per_process: 4
    - name: GridSelection
    - name: TXParqetToHDF
    # Prepare the p(z) calculation
    - name: PZPrepareEstimatorLens
      nprocess: 4
      classname: Inform_BPZ_lite
    # Run the p(z) calculation
    - name: PZEstimatorLens
      classname: BPZ_lite
      nprocess: 4
      threads_per_process: 1
    # Select into tomo bins using p(z) means
    - name: TXMeanLensSelector
      nprocess: 4
    # Prepare the n(z) calculation
    - name: Inform_NZDirLens
      classname: Inform_NZDir
    # Run the n(z) calculation
    - name: PZRailSummarizeLens
      classname: PZRailSummarize
    # Make a plot of the realizations
    - name: PZRealizationsPlot
      

# where to find any modules that are not in this repo,
# and any other code we need.
python_paths:
    - submodules/WLMassMap/python/desc/
    - submodules/TJPCov
    - submodules/FlexZPipe
    - submodules/RAIL

# Where to put outputs
output_dir: data/vae

# How to run the pipeline: mini, parsl, or cwl
launcher:
    name: mini
    interval: 1.0

# Where to run the pipeline: cori-interactive, cori-batch, or local
site:
    name: local
    max_threads: 4

# python modules to import to search for stages
modules: txpipe rail

# configuration settings
config: examples/vae/config.yml

# On NERSC, set this before running:
# export DATA=${LSST}/groups/WL/users/zuntz/data/metacal-testbed

inputs:
    # See README for paths to download these files
    shear_catalog: data/example/inputs/metadetect_shear_catalog.hdf5
    photometry_catalog: data/example/inputs/photometry_catalog.hdf5
    calibration_table: data/example/inputs/sample_cosmodc2_w10year_errors.dat
    flow: data/example/inputs/example_flow.pkl

# if supported by the launcher, restart the pipeline where it left off
# if interrupted
resume: True
# where to put output logs for individual stages
log_dir: data/vae/logs
# where to put an overall parsl pipeline log
pipeline_log: data/vae/log.txt
