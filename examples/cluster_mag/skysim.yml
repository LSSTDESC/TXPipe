# These are the different pipeline stages that the pipeline will run.  Each
# is a python class in one of the files in the txpipe/cluster_mag directory.

stages:
## I have commented this first one out because it is pretty slow (it uses GCR)
## and I've run it already.  If you want to change the minimum halo mass or
## restrict to a subset of of the area then you it can re-run separately.
## Delete it from the list of inputs below as well in that case.
#    - name: CMIngestHalosCosmoDC2
    - name: CMSelectHalos
    - name: CMSelectBackground
    - name: CMRandoms
      nprocess: 16
      nodes: 1
      threads_per_process: 1
    - name: TXJackknifeCenters
    - name: CMRedshifts
    - name: CMCorrelations
      threads_per_process: 16
    - name: CMCorrelationsPlot

# This file contains the configuration for the stages above:
config: examples/cluster_mag/skysim_config.yml

# where to put ouput files
output_dir: $THRONG_DIR/users/jzuntz/cluster_mag/skysim/outputs

# overall inputs to the pipeline. The photometry catalog is one I extracted from SkySim 5000.
# The halo catalog was generated with the commented-out stage above
inputs:
    photometry_catalog: $THRONG_DIR/users/jzuntz/cluster_mag/skysim/photometry_catalog.hdf5
    cluster_mag_halo_catalog: $THRONG_DIR/users/jzuntz/cluster_mag/skysim/cluster_mag_halo_catalog.hdf5


# this is which python modules to import
# to search for stages
modules: txpipe

# If you interrupt the pipeline in the middle this setting
# makes it start again from where it left off
resume: True

# Where log files go
log_dir: $THRONG_DIR/users/jzuntz/cluster_mag/skysim/logs
pipeline_log: $THRONG_DIR/users/jzuntz/cluster_mag/skysim/log.txt

# This tells the launcher how to run the code
# you shouldn't need to modify it
launcher:
    name: mini
    interval: 1.0

# These site options tell the launcher to use shifter,
# a docker-based system that we use here to supply all
# the dependencies of the code.  You should not need
# to modify this either.
site:
    name: cc-parallel

