# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install gfortran-7 swig libgsl-dev libopenmpi-dev openmpi-bin libopenblas-dev
        sudo apt-get -y install libfftw3-bin libfftw3-dev libfftw3-3 autotools-dev  autoconf libcfitsio-dev
        sudo ln -s `which gfortran-7` /usr/local/bin/gfortran


    - uses: actions/cache@v2
      name: Load GSL cache
      id: cache-gsl
      with:
        path: ./gsl-2.5
        key: ${{ runner.os }}-gsl

    - uses: actions/cache@v2
      name: Load pip cache
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}

    - name: Compile GSL
      if: steps.cache-gsl.outputs.cache-hit != 'true'
      run: |
        wget ftp://ftp.gnu.org/gnu/gsl/gsl-2.5.tar.gz --passive-ftp
        tar xzf gsl-2.5.tar.gz && cd gsl-2.5 &&  ./configure --enable-shared && make

    - name: Install GSL
      run: |
        cd gsl-2.5 && sudo make install

    - name: Install pip
      run: |
        python -m pip install --upgrade pip
        pip install cffi pytest pyyaml
        pip install git+git://github.com/LSSTDESC/CCL@a9c23144727768a91af76da0c727830e6f0ed784
        pip install --no-binary=mpi4py  -r requirements.txt
        pip install --no-binary=pymaster pymaster

    - name: Install executables
      run: |
        pip install ceci>=1.3 pytest mockmpi

    - name: Download test data
      run: |
        wget -O example.tar.gz  "https://portal.nersc.gov/cfs/lsst/txpipe/data/example.tar.gz"
        tar -zxvf example.tar.gz

    - name: Test with pytest
      run: |
        pytest txpipe

    - name: Run more pipelines
      run: |
        ceci examples/laptop_redmagic_pipeline.yml
        ceci examples/laptop_lensfit_pipeline.yml
        test -f data/example/outputs/shear_xi_plus.png
        test -f data/example/outputs_redmagic/shear_xi_plus.png
        test -f data/example/outputs_lensfit/shear_xi_plus.png

    - name: Failure logs
      if: ${{ always() }}
      run: |
        tail -n +1 data/example/logs/*
        tail -n +1 data/example/logs_redmagic/*
        tail -n +1 data/example/logs_lensfit/*
